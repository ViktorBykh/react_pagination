{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","setCurrentPage","totalPages","Math","ceil","pages","i","push","className","href","onClick","items","from","to","numbers","n","getNumbers","map","NUMBER_OF_ITEMS","length","getVisibleItems","slice","App","useState","setPerPage","visibleItems","setVisibleItems","useEffect","firstItemOnPage","lastItemOnPage","id","value","onChange","event","currentTarget","htmlFor","onPageChange","item","ReactDOM","render","document","getElementById"],"mappings":"2MAQaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQ,GAFV,WAIKC,GACPD,EAAME,KACJ,oBAAIC,UAAWR,IAAgBM,EAC3B,mBACA,YAFJ,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAI,WAAMH,GACVI,QAAS,WACPT,EAAeK,IALnB,SAQGA,QAdAA,EAAI,EAAGA,GAAKJ,EAAYI,GAAK,EAAI,EAAjCA,GAoBT,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAA2B,IAAhBR,EACX,qBACA,YAFJ,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBT,EACX,OACA,QACJU,QAAS,kBACNV,EAAc,GACZC,EAAeD,EAAc,IATpC,oBAeDK,EAED,oBAAIG,UAAWR,IAAgBE,EAC3B,qBACA,YAFJ,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVC,KAAK,QACL,gBAAeT,IAAgBE,EAC3B,OACA,QACJQ,QAAS,kBACNV,EAAcE,GACZD,EAAeD,EAAc,IATpC,wBC3DFW,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQP,KAAKQ,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBC,KAAI,SAAAF,GAAC,qBAAYA,MAEdG,EAAkBP,EAAMQ,OAIxBC,EAAkB,SAACpB,EAAqBD,GAC5C,OAAO,YAAIY,EAAMU,MAAOrB,EAAcD,EAAWA,EAC/CC,EAAcD,KAGLuB,EAAgB,WAC3B,MAA8BC,mBARP,GAQvB,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAVX,GAU3B,mBAAOvB,EAAP,KAAoBC,EAApB,KACA,EACIsB,mBAASH,EAZc,EAYwBrB,IADnD,mBAAO0B,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRD,EAAgBN,EAAgBpB,EAAaD,MAC5C,CAACC,EAAaD,IAEjB,IAAM6B,EAAkBH,EAAa,GAAGJ,MAAM,GACxCQ,EAAiBJ,EAAaA,EAAaN,OAAS,GAAGE,MAAM,GAEnE,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EADjC,cACsDC,EADtD,eAC2EX,EAD3E,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOhC,EACPiC,SAAU,SAAAC,GACRT,GAAYS,EAAMC,cAAcH,OAChC9B,EAtCe,IA+BnB,UAUE,wBAAQ8B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOoB,EACPnB,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChBmC,aAAc,kBAAMV,EAClBN,EAAgBpB,EAAaD,OAGjC,6BAEG0B,EAAaR,KAAI,SAACoB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAAoBA,aEvE9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.49fe4db8.chunk.js","sourcesContent":["type Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  setCurrentPage: (page: number) => void,\n  onPageChange: () => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    pages.push(\n      <li className={currentPage === i\n        ? 'page-item active'\n        : 'page-item'}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${i}`}\n          onClick={() => {\n            setCurrentPage(i);\n          }}\n        >\n          {i}\n        </a>\n      </li>,\n    );\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={currentPage === 1\n        ? 'page-item disabled'\n        : 'page-item'}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1\n            ? 'true'\n            : 'false'}\n          onClick={() => (\n            (currentPage > 1)\n            && setCurrentPage(currentPage - 1))}\n        >\n          «\n        </a>\n      </li>\n\n      {pages}\n\n      <li className={currentPage === totalPages\n        ? 'page-item disabled'\n        : 'page-item'}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages\n            ? 'true'\n            : 'false'}\n          onClick={() => (\n            (currentPage < totalPages)\n            && setCurrentPage(currentPage + 1))}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst NUMBER_OF_ITEMS = items.length;\nconst DEFAULT_CURRENT_PAGE = 1;\nconst DEFAULT_PER_PAGE = 5;\n\nconst getVisibleItems = (currentPage: number, perPage: number) => {\n  return [...items.slice((currentPage * perPage) - perPage,\n    currentPage * perPage)];\n};\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(DEFAULT_PER_PAGE);\n  const [currentPage, setCurrentPage] = useState(DEFAULT_CURRENT_PAGE);\n  const [visibleItems, setVisibleItems]\n    = useState(getVisibleItems(DEFAULT_CURRENT_PAGE, perPage));\n\n  useEffect(() => {\n    setVisibleItems(getVisibleItems(currentPage, perPage));\n  }, [currentPage, perPage]);\n\n  const firstItemOnPage = visibleItems[0].slice(5);\n  const lastItemOnPage = visibleItems[visibleItems.length - 1].slice(5);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${NUMBER_OF_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(+event.currentTarget.value);\n              setCurrentPage(DEFAULT_CURRENT_PAGE);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={NUMBER_OF_ITEMS}\n        perPage={perPage}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        onPageChange={() => setVisibleItems(\n          getVisibleItems(currentPage, perPage),\n        )}\n      />\n      <ul>\n\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}